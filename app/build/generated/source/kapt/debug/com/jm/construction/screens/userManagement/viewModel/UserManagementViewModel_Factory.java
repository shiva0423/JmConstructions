// Generated by Dagger (https://dagger.dev).
package com.jm.construction.screens.userManagement.viewModel;

import com.jm.construction.screens.userManagement.repo.UserManagementRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserManagementViewModel_Factory implements Factory<UserManagementViewModel> {
  private final Provider<UserManagementRepository> userManagementProvider;

  public UserManagementViewModel_Factory(
      Provider<UserManagementRepository> userManagementProvider) {
    this.userManagementProvider = userManagementProvider;
  }

  @Override
  public UserManagementViewModel get() {
    return newInstance(userManagementProvider.get());
  }

  public static UserManagementViewModel_Factory create(
      Provider<UserManagementRepository> userManagementProvider) {
    return new UserManagementViewModel_Factory(userManagementProvider);
  }

  public static UserManagementViewModel newInstance(UserManagementRepository userManagement) {
    return new UserManagementViewModel(userManagement);
  }
}
